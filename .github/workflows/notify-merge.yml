name: Notify on merged PRs

on:
  pull_request:
    types: [closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  notify:
    name: Notify on merge
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Post merge comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const number = pr.number;
            const author = pr.user?.login || 'unknown';
            const title = pr.title;
            const mergedBy = pr.merged_by?.login || 'unknown';
            const sha = pr.merge_commit_sha || 'n/a';
            const body = [
              `✅ Merged PR #${number}: ${title}`,
              `- Author: @${author}`,
              `- Merged by: @${mergedBy}`,
              `- Branch: ${pr.head.ref} → ${pr.base.ref}`,
              `- Commit: ${sha}`,
              '',
              'This is an automated notification.'
            ].join('\n');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body,
            });

      - name: Send Slack notification (optional)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "SLACK_WEBHOOK_URL not set. Skipping Slack notification.";
            exit 0;
          fi
          PR_NUM=${{ github.event.pull_request.number }}
          PR_TITLE=${{ toJSON(github.event.pull_request.title) }}
          PR_URL=${{ toJSON(github.event.pull_request.html_url) }}
          REPO=${{ toJSON(github.repository) }}
          MERGED_BY=${{ toJSON(github.event.pull_request.merged_by.login) }}
          HEAD=${{ toJSON(github.event.pull_request.head.ref) }}
          BASE=${{ toJSON(github.event.pull_request.base.ref) }}
          TEXT="✅ PR merged in ${REPO} #${PR_NUM}: ${PR_TITLE}\n${HEAD} → ${BASE}\nMerged by: ${MERGED_BY}\n${PR_URL}"
          PAYLOAD=$(printf '{"text": %s}' "$(jq -Rn --arg t "$TEXT" '$t')")
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"


